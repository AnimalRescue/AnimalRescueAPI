/*
 * Animal Rescue API
 *
 * AnimalRescue CQRS API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jlgartee@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DefaultApiController : Controller
    { 
        /// <summary>
        /// Creates a new Intake aggregate
        /// </summary>
        /// <remarks>Create an Intake with all required components</remarks>
        /// <param name="intake"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpPost]
        [Route("/jgartee/AnimalRescueCQRS/1.0.0/intake")]
        [ValidateModelState]
        [SwaggerOperation("CreateIntake")]
        public virtual void CreateIntake([FromBody]Intake intake)
        { 
            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns a filtered list of all Intakes for the Rescue
        /// </summary>
        /// <remarks>Returns an array of IntakeList structures.  Intake serves as the aggregate for the process of bringing animals into the Rescue.</remarks>
        /// <param name="limit">Limits the number of items on a page</param>
        /// <param name="offset">Specifies the page number of the items to be displayed</param>
        /// <param name="animalType">Specifies cat or dog</param>
        /// <param name="fromDate">Specifies the first intake date to return</param>
        /// <param name="type">Intake type of Surrender, Transfer, or Stray</param>
        /// <param name="location">Specifies a search string found in Location, Building, Room, Kennel, or Enclosure name</param>
        /// <param name="searchString">pass an optional search string for looking up items</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/jgartee/AnimalRescueCQRS/1.0.0/intake")]
        [ValidateModelState]
        [SwaggerOperation("GetFilteredIntakes")]
        [SwaggerResponse(200, typeof(List<IntakeList>), "OK")]
        [SwaggerResponse(400, typeof(List<IntakeList>), "Bad Request")]
        [SwaggerResponse(401, typeof(List<IntakeList>), "Unauthorized")]
        public virtual IActionResult GetFilteredIntakes([FromQuery]int? limit, [FromQuery]int? offset, [FromQuery]string animalType, [FromQuery]DateTime? fromDate, [FromQuery]string type, [FromQuery]string location, [FromQuery]string searchString)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<IntakeList>>(exampleJson)
            : default(List<IntakeList>);
            return new ObjectResult(example);
        }
    }
}
